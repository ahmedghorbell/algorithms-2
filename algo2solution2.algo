//the sum of all distinct elements from the set with hashtable
ALGORITHM sum_distinct
VAR
    set1, set2 : ARRAY_OF INTEGER;
    i, j : INTEGER;
    sum: INTEGER := 0 ;
    hash_table : ARRAY_OF BOOLEAN;
BEGIN
    Read(set1);
    Read(set2);
    hash_table := new ARRAY_OF BOOLEAN[MAX_INTEGER];
FOR i FROM 0 TO set1.length-1 DO
    IF (!hash_table[set1[i]]) THEN
    hash_table[set1[i]] := true;
    sum := sum + set1[i];
    END_IF
END_FOR
FOR j FROM 0 TO set2.length-1 DO
    IF (!hash_table[set2[j]]) THEN
        hash_table[set2[j]] := true;
        sum := sum + set2[j];
    END_IF
END_FOR
    Write(sum);
END



//the sum of overlapping elements in two sets with hashtable
ALGORITHM sum_overlapping
VAR
    set1, set2 : ARRAY_OF INTEGER;
    i, j : INTEGER;
    sum: INTEGER := 0 ;
    hash_table : HASH_TABLE;
BEGIN
    Read(set1);
    Read(set2);
    FOR i FROM 0 TO set1.length-1 DO
        hash_table.insert(set1[i]);
    END_FOR

    FOR i FROM 0 TO set2.length-1 DO
        IF (hash_table.contains(set2[i])) THEN
            hash_table.remove(set2[i]);
            sum := sum + set2[i];
        END_IF
    END_FOR

    Write(sum);
END